
import inventoryMgmt.Result;
import inventoryMgmt.Inventory;
import java.net.MalformedURLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import logic.LogicInterface;

/******************************************************************************
 * File:NewJFrame.java
 * Course: 17655
 * Project: Assignment 2
 * Copyright: Copyright (c) 2009 Carnegie Mellon University
 * Versions:
 *	1.0 November 2009 - Initial rewrite of original assignment 2 (ajl).
 *
 * This class defines a GUI application that allows inventory to be added to the
 * inventory databases. There are tree tables in the inventory database: trees,
 * shrubs, and seeds.
 *
 ******************************************************************************/
/*
 * AddInventoryMainFrame.java
 *
 * Created on Jan 29, 2010, 9:24:23 PM
 */

/**
 *
 * @author lattanze
 */
public class InventoryMainFrame extends javax.swing.JFrame {

       String versionID = "v2.10.10";

    /** Creates new form AddInventoryMainFrame */
    public InventoryMainFrame() {
        initComponents();
        jLabel1.setText("Inventory Management Application " + versionID);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Trees");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Culture boxes");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Seeds");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Inventory Management Application");

        jLabel2.setText("Product ID");

        jLabel3.setText("Price");

        jLabel4.setText("Quantity");

        jTextField1.setText("localhost");

        jButton1.setText("Add Item");
        jButton1.setActionCommand("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Product Description");

        jLabel6.setText("Database Server IP");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton2.setText("List Inventory");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Item");
        jButton3.setMaximumSize(new java.awt.Dimension(79, 23));
        jButton3.setMinimumSize(new java.awt.Dimension(79, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Decrement");
        jButton4.setMaximumSize(new java.awt.Dimension(79, 23));
        jButton4.setMinimumSize(new java.awt.Dimension(79, 23));
        jButton4.setPreferredSize(new java.awt.Dimension(79, 23));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Deletes item selected from list ");

        jLabel8.setText("Decrements inventory count");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Shrubs");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Genomics");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Processing");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jLabel9.setText("of item selected from the list");

        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setText("Reference Materials");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator1)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(17, 17, 17)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField3)
                                            .addComponent(jTextField4)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButton3)
                                            .addComponent(jRadioButton4)
                                            .addComponent(jRadioButton1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButton5)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jRadioButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jRadioButton7)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)))
                                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton1)
                            .addComponent(jLabel2)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton3)
                            .addComponent(jLabel3)
                            .addComponent(jRadioButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);

    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(true);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(true);        
        jRadioButton3.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // Adds inventory to database
        
        Integer quantity;               // Quantity of product
        String description;             // Product description
        String productID = null;        // Product id
        Float perUnitCost;              // Cost per tproduct unit
        String msgString = null;            // String for displaying non-error messages
        Result res = null;               // SQL query result set pointer
        Boolean fieldError = false;      // Error flag
        String dbName = "";
        String category="";
        
        // Check to make sure a radio button is selected
       
        jTextArea1.setText("");
        
        if (!jRadioButton1.isSelected() && !jRadioButton2.isSelected() && !jRadioButton3.isSelected()
                && !jRadioButton4.isSelected() && !jRadioButton5.isSelected() && !jRadioButton6.isSelected() && !jRadioButton7.isSelected())
        {
            fieldError = true;
            jTextArea1.append("\nMust select Product by radio button.");

        } else {
       
            //Make sure there is a product description
            if ( jTextField5.getText().length() == 0 )
            {
                fieldError = true;
                jTextArea1.append("\nMust enter a Product description.");
                
            } else {
     
                //Make sure there is a product ID
                if ( jTextField2.getText().length() == 0 )
                {
                    fieldError = true;
                    jTextArea1.append("\nMust enter Product ID.");
                } else {
            
                    //Make sure there is a price
                    if ( jTextField3.getText().length() == 0 )
                    {
                        fieldError = true;
                        jTextArea1.append("\nMust enter Product price.");
                    } else {
                    
                        //Make sure quantity is specified
                        if ( jTextField4.getText().length() == 0 )
                        {
                            fieldError = true;
                            jTextArea1.append("\nMust enter Product quantity.");
                        } // quantity
                    } // price
                } // product ID
            } //product description
        } //category selected

        //Now, if there was no error in the data fields, we try to
        //connect to the database.
        
        if ( !fieldError )
        {
            description = jTextField5.getText();
            productID = jTextField2.getText();
            quantity = Integer.parseInt(jTextField4.getText());
            perUnitCost = Float.parseFloat(jTextField3.getText());
            
            if (jRadioButton1.isSelected())
                {
                    dbName = "inventory";
                    category = "TREES";
                }
                // ... here is the SQL for shrubs
                if (jRadioButton4.isSelected())
                {
                    dbName = "inventory";
                    category = "SHRUBS";
                }
                // ... here is the SQL for seeds
                if (jRadioButton3.isSelected())
                {
                    dbName = "inventory";
                    category = "SEEDS";
                }
                // ... here is the SQL for Culture boxes
                if (jRadioButton2.isSelected())
                {
                    dbName = "leaftech";
                    category = "cultureboxes";
                }
                // ... here is the SQL for Genomics
                if (jRadioButton5.isSelected())
                {
                    dbName = "leaftech";
                    category = "genomics";
                }
                // ... here is the SQL for Processing
                if (jRadioButton6.isSelected())
                {
                    dbName = "leaftech";
                    category = "processing";
                }
                // ... here is the SQL for Reference Materials
                if (jRadioButton7.isSelected())
                {
                    dbName = "leaftech";
                    category = "referencematerials";
                }
                
                // Connect to the inventory database
                msgString = ">> Establishing Driver...";
                jTextArea1.append("\n"+msgString);

                msgString = ">> Setting up URL...";
                jTextArea1.append("\n"+msgString);

                    //define the data source
                String SQLServerIP = jTextField1.getText();
                msgString = ">> Establishing connection with database on " + SQLServerIP + " ...";
                jTextArea1.append("\n"+msgString);

                try {
                    res = remote.insertEntriesToInventory(SQLServerIP, dbName, category, 
                                                            description, productID, quantity, perUnitCost);
                } catch (RemoteException ex) {
                    String errString =  "\nProblem connecting to database:: " + ex;
                    jTextArea1.append(errString);
                    return;
                }
                if(res == null || !res.getErrMsg().equals("")){
                    jTextArea1.append(res.getErrMsg());
                    return;
                }
                
                jTextArea1.append("\nINVENTORY UPDATED... The following was added to the " + category + " inventory...\n");
                jTextArea1.append("\nProduct Code:: " + productID);
                jTextArea1.append("\nDescription::  " + description);
                jTextArea1.append("\nQuantity::     " + quantity);
                jTextArea1.append("\nUnit Cost::    " + perUnitCost);
        } //execute SQL check

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // This button will list the inventory for the product selected by the
        // radio button

        String msgString = null;            // String for displaying non-error messages
        Result res = null;               // SQL query result set pointer
        Boolean fieldError = true;      // Error flag
        String dbName = "";
        String category="";

        // Check to make sure a radio button is selected
        if (jRadioButton1.isSelected() || jRadioButton2.isSelected() || jRadioButton3.isSelected() 
                || jRadioButton4.isSelected() || jRadioButton5.isSelected() || jRadioButton6.isSelected() || jRadioButton7.isSelected())
        {
            fieldError = false;

        } else {

            msgString = "Must select Product by radio button.";
            jTextArea1.setText("\n"+msgString);
        }


        //Now, we try to connect to the inventory database.
        if (!fieldError)
        {
            //Clear the fields - they are not needed and may cause confusion
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextArea1.setText("");
            
            if (jRadioButton1.isSelected())
                {
                    dbName = "inventory";
                    category = "TREES";
                }
                // ... here is the SQL for shrubs
                if (jRadioButton4.isSelected())
                {
                    dbName = "inventory";
                    category = "SHRUBS";
                }
                // ... here is the SQL for seeds
                if (jRadioButton3.isSelected())
                {
                    dbName = "inventory";
                    category = "SEEDS";
                }
                // ... here is the SQL for Culture boxes
                if (jRadioButton2.isSelected())
                {
                    dbName = "leaftech";
                    category = "CULTURE BOXES";
                }
                // ... here is the SQL for Genomics
                if (jRadioButton5.isSelected())
                {
                    dbName = "leaftech";
                    category = "GENOMICS";
                }
                // ... here is the SQL for Processing
                if (jRadioButton6.isSelected())
                {
                    dbName = "leaftech";
                    category = "PROCESSING";
                }
                // ... here is the SQL for Reference Materials
                if (jRadioButton7.isSelected())
                {
                    dbName = "leaftech";
                    category = "REFERENCE MATERIALS";
                }
                
                // Connect to the inventory database
                msgString = ">> Establishing Driver...";
                jTextArea1.setText("\n"+msgString);

                msgString = ">> Setting up URL...";
                jTextArea1.append("\n"+msgString);

                    //define the data source
                String SQLServerIP = jTextField1.getText();
                msgString = ">> Establishing connection with database on " + SQLServerIP + " ...";
                jTextArea1.append("\n"+msgString);

                try {
                    res = remote.selectEntriesFromInventory(SQLServerIP, dbName, category);
                } catch (RemoteException ex) {
                    String errString =  "\nProblem with database:: " + ex;
                    jTextArea1.append(errString);
                    return;
                }
                if(res == null || !res.getErrMsg().equals("")){
                    jTextArea1.append(res.getErrMsg());
                    return;
                }
                jTextArea1.setText("");

                for(Inventory item : res.getRes())
                {
                    msgString = category + ">> " + item.productCode + " : " + item.description +
                                " : $"+ item.price + " : " + item.quantity;
                    jTextArea1.append(msgString+"\n");
                }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Deletes an item from the database
        
        int beginIndex;                     // Parsing index
        int endIndex;                       // Parsing index
        String productID = null;            // Product ID pnemonic
        Boolean IndexNotFound;              // Flag indicating a string index was not found.
        String inventorySelection = null;   // Inventory text string selected by user
        IndexNotFound = false;              // Flag indicating that a string index was not found
        
        String dbName = "";
        String category ="";
        Result res = null;               // SQL query result set pointer
        String msgString = null;            // String for displaying non-error messages
        
        // this is the selected line of text
        inventorySelection =  jTextArea1.getSelectedText();

        // make sure the selection is not blank
        if ( inventorySelection != null )
        {
            // get the product ID - here we get the leading index
            beginIndex = 0;
            endIndex = inventorySelection.indexOf(">>",beginIndex);

            if (endIndex < 0 ) {
                IndexNotFound = true;
            } else {
                beginIndex = endIndex+2; //skip past ">>"                                
            }
            
            if ( !IndexNotFound )
            {
                // Here we get the trailing index and parse out the productID
                endIndex = inventorySelection.indexOf(":",beginIndex);

                if (endIndex < 0 ) {
                    IndexNotFound = true;
                } else {
                    productID = inventorySelection.substring(beginIndex,endIndex);
                }              
            }
           
            // Now we delete the inventory item indicated by the productID we
            // parsed out above from the indicated table.
            
            if ( !IndexNotFound )
            {
                jTextArea1.setText("");
                jTextArea1.append( "Deleting ProductID: " + productID );

                if (jRadioButton1.isSelected())
                {
                    dbName = "inventory";
                    category = "TREES";
                }
                // ... here is the SQL for shrubs
                if (jRadioButton4.isSelected())
                {
                    dbName = "inventory";
                    category = "SHRUBS";
                }
                // ... here is the SQL for seeds
                if (jRadioButton3.isSelected())
                {
                    dbName = "inventory";
                    category = "SEEDS";
                }
                // ... here is the SQL for Culture boxes
                if (jRadioButton2.isSelected())
                {
                    dbName = "leaftech";
                    category = "cultureboxes";
                }
                // ... here is the SQL for Genomics
                if (jRadioButton5.isSelected())
                {
                    dbName = "leaftech";
                    category = "genomics";
                }
                // ... here is the SQL for Processing
                if (jRadioButton6.isSelected())
                {
                    dbName = "leaftech";
                    category = "processing";
                }
                // ... here is the SQL for Reference Materials
                if (jRadioButton7.isSelected())
                {
                    dbName = "leaftech";
                    category = "referencematerials";
                }

                    //define the data source
                String SQLServerIP = jTextField1.getText();

                try {
                    res = remote.deleteEntryFromInventory(SQLServerIP, dbName, category, productID.trim());
                } catch (RemoteException ex) {
                    String errString =  "\nProblem with database:: " + ex;
                    jTextArea1.append(errString);
                    return;
                }
                if(res == null || !res.getErrMsg().equals("")){
                    jTextArea1.append(res.getErrMsg());
                    return;
                }
                jTextArea1.append("");

                jTextArea1.append("\n\n" + productID + " deleted...");
                jTextArea1.append("\n Number of items deleted: " + res.getChanged() );
            } else {

                jTextArea1.setText("");
                jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");      

            }
        } else {

            jTextArea1.append("");
            jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)"); 

        } // Blank string check        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Decrements the inventory count for a selected item
        int beginIndex;                     // Parsing index
        int endIndex;                       // Parsing index
        String productID = null;            // Product ID pnemonic
        Boolean IndexNotFound;              // Flag indicating a string index was not found.
        String inventorySelection = null;   // Inventory text string selected by user
        IndexNotFound = false;              // Flag indicating that a string index was not found
        
        String dbName = "";
        String category ="";
        Result res = null;               // SQL query result set pointer
        String msgString = null;            // String for displaying non-error messages
        
        // this is the selected line of text
        inventorySelection =  jTextArea1.getSelectedText();

        // make sure the selection is not blank
        if ( inventorySelection != null )
        {
            // get the product ID - here we get the leading index
            beginIndex = 0;
            endIndex = inventorySelection.indexOf(">>",beginIndex);

            if (endIndex < 0 ) {
                IndexNotFound = true;
            } else {
                beginIndex = endIndex+2; //skip past ">>"                                
            }
            
            if ( !IndexNotFound )
            {
                // Here we get the trailing index and parse out the productID
                endIndex = inventorySelection.indexOf(":",beginIndex);

                if (endIndex < 0 ) {
                    IndexNotFound = true;
                } else {
                    productID = inventorySelection.substring(beginIndex,endIndex);
                }              
            }
           
            // Now we decrement the inventory count of the item indicated by the productID we
            // parsed out above from the indicated table.
            
            if ( !IndexNotFound )
            {
                jTextArea1.setText("");
                jTextArea1.append( "Deleting ProductID: " + productID );

                if (jRadioButton1.isSelected())
                {
                    dbName = "inventory";
                    category = "TREES";
                }
                // ... here is the SQL for shrubs
                if (jRadioButton4.isSelected())
                {
                    dbName = "inventory";
                    category = "SHRUBS";
                }
                // ... here is the SQL for seeds
                if (jRadioButton3.isSelected())
                {
                    dbName = "inventory";
                    category = "SEEDS";
                }
                // ... here is the SQL for Culture boxes
                if (jRadioButton2.isSelected())
                {
                    dbName = "leaftech";
                    category = "cultureboxes";
                }
                // ... here is the SQL for Genomics
                if (jRadioButton5.isSelected())
                {
                    dbName = "leaftech";
                    category = "genomics";
                }
                // ... here is the SQL for Processing
                if (jRadioButton6.isSelected())
                {
                    dbName = "leaftech";
                    category = "processing";
                }
                // ... here is the SQL for Reference Materials
                if (jRadioButton7.isSelected())
                {
                    dbName = "leaftech";
                    category = "referencematerials";
                }

                    //define the data source
                String SQLServerIP = jTextField1.getText();

                try {
                    res = remote.decrementEntryFromInventory(SQLServerIP, dbName, category, productID.trim());
                } catch (RemoteException ex) {
                    String errString =  "\nProblem with database:: " + ex;
                    jTextArea1.append(errString);
                    return;
                }
                if(res != null && res.getErrMsg().equals("")){  
                    jTextArea1.append("");
                       
                    jTextArea1.append("\n\n" + productID.trim() + " inventory decremented...");
                        
                    for ( Inventory item : res.getRes() )
                    {
                            msgString = category + ">> " + item.productCode + " : " + item.description +
                                " : $"+ item.price + " : " + item.quantity
                                + " units in stock";
                            jTextArea1.append("\n"+msgString);

                    } // while
                        
                    jTextArea1.append("\n\n Number of items updated: " + res.getChanged() );
                }
            } else {
                jTextArea1.setText("");
                jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");      

            }
        } else {

            jTextArea1.setText("");
            jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)"); 

        } // Blank string check
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try{ 
            System.setProperty("java.security.policy", "policy.txt");
            System.setSecurityManager(new java.rmi.RMISecurityManager());
            remote = (LogicInterface) Naming.lookup("//localhost:9999/RMI");
        } catch (NotBoundException e){
            e.printStackTrace();
        } catch (MalformedURLException e){
            e.printStackTrace();
        } catch (RemoteException e){
            e.printStackTrace();
	}
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    private static LogicInterface remote;
}
